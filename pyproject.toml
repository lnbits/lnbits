[tool.poetry]
name = "lnbits"
version = "0.10.9"
description = "LNbits, free and open-source Lightning wallet and accounts system."
authors = ["Alan Bits <alan@lnbits.com>"]

[tool.poetry.dependencies]
python = "^3.10 | ^3.9"
bech32 = "1.2.0"
bitstring = "3.1.9"
click = "8.0.4"
ecdsa = "0.18.0"
embit = "^0.7.0"
fastapi = "0.83.0"
httpx = "0.23.0"
jinja2 = "3.0.1"
lnurl = "0.3.6"
psycopg2-binary = "2.9.1"
pydantic = "1.10.4"
pyqrcode = "1.2.1"
shortuuid = "1.0.11"
sqlalchemy = "1.3.24"
sqlalchemy-aio = "0.17.0"
sse-starlette = "0.6.2"
typing-extensions = "4.4.0"
uvicorn = "0.18.3"
uvloop = "0.16.0"
websockets = "10.0"
loguru = "0.6.0"
grpcio = "1.51.1"
protobuf = "4.21.12"
Cerberus = "1.3.4"
async-timeout = "4.0.2"
pyln-client = "0.11.1"
cashu = "0.9.0"
slowapi = "^0.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.2"
mock = "^4.0.3"
black = "^23.7.0"
pytest-asyncio = "^0.19.0"
pytest-cov = "^4.1.0"
mypy = "^0.971"
types-protobuf = "^3.19.22"
pre-commit = "^3.2.2"
types-mock = "^5.0.0.6"
openapi-spec-validator = "^0.5.5"
ruff = "^0.0.284"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
lnbits = "lnbits.server:main"

[tool.pyright]
include = [
  "lnbits"
]
exclude = [
  "lnbits/wallets/lnd_grpc_files",
  "lnbits/extensions",
  "lnbits/upgrades",
]

[tool.mypy]
files = "lnbits"
exclude = [
  "^lnbits/wallets/lnd_grpc_files",
  "^lnbits/extensions",
  "^lnbits/upgrades",
]

[[tool.mypy.overrides]]
module = [
  "embit.*",
  "secp256k1.*",
  "uvicorn.*",
  "sqlalchemy.*",
  "sqlalchemy_aio.*",
  "websocket.*",
  "websockets.*",
  "pyqrcode.*",
  "shortuuid.*",
  "grpc.*",
  "lnurl.*",
  "bitstring.*",
  "ecdsa.*",
  "psycopg2.*",
  "pyngrok.*",
  "pyln.client.*",
]
ignore_missing_imports = "True"

[tool.pytest.ini_options]
log_cli = true
addopts = "--durations=1 -s --cov=lnbits --cov-report=xml"
testpaths = [
  "tests"
]

[tool.black]
# line-length = 150
# previously experimental-string-processing = true
# this should autoformat string poperly but does not work
# preview = true
target-versions = ["py39"]
extend-exclude = """(
    lnbits/static
    | lnbits/extensions
    | lnbits/upgrades
    | lnbits/wallets/lnd_grpc_files
)"""

[tool.ruff]
# Same as Black.
line-length = 150

# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F", "I"]
ignore = [
    "E402", # Module level import not at top of file
    "E501",  # Line length
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    "lnbits/static",
    "lnbits/extensions",
    "lnbits/wallets/lnd_grpc_files",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python
# target-version = "py39"

# Ignore unused imports in __init__.py files.
[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
