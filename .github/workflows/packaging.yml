name: Build LNbits AppImage DMG

on:
  release:
    types: [published]

jobs:
  build-linux-package:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Install Poetry Package Manager
      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        shell: bash

      # Step 3: Clone LNbits Repository into packaging/linux/AppDir/usr/lnbits
      - name: Clone LNbits
        run: |
          mv .github/packaging packaging
          mkdir -p packaging/linux/AppDir/usr
          git clone https://github.com/arcbtc/lnbits.git packaging/linux/AppDir/usr/lnbits
        shell: bash

      # Step 4: Install LNbits and Build PyInstaller Binary
      - name: Build LNbits Binary
        run: |
          cd packaging/linux/AppDir/usr/lnbits
          poetry install
          poetry run pip install pyinstaller

          # Build the LNbits binary
          poetry run pyinstaller --onefile --name lnbits --collect-all lnbits --collect-all sqlalchemy --collect-all aiosqlite --hidden-import=passlib.handlers.bcrypt $(poetry run which lnbits)
          cd ../../../../..
          chmod +x packaging/linux/AppDir/AppRun
          chmod +x packaging/linux/AppDir/lnbits.desktop
          chmod +x packaging/linux/AppDir/usr/lnbits/dist/lnbits
        shell: bash

      # Step 5: Debug packaging/linux/AppDir Before Creating AppImage
      - name: Debug packaging/linux/AppDir Before Creating AppImage
        run: |
          ls -R packaging/linux/AppDir/
        shell: bash

      - name: Install FUSE for AppImage
        run: |
          sudo apt-get update
          sudo apt-get install -y libfuse2
        shell: bash
  
      # Step 6: Install and Run AppImageTool
      - name: Install AppImageTool and Create AppImage
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          # Get the release tag name from GitHub Actions
          TAG_NAME=${{ github.event.release.tag_name }}
          APPIMAGE_NAME="LNbits-${TAG_NAME}.AppImage"
          ./appimagetool-x86_64.AppImage --updateinformation "gh-releases-zsync|lnbits|lnbits|latest|*.AppImage.zsync" packaging/linux/AppDir "$APPIMAGE_NAME"
          chmod +x "$APPIMAGE_NAME"
          echo "APPIMAGE_NAME=$APPIMAGE_NAME" >> $GITHUB_ENV
        shell: bash

      # Step 7: Upload Linux Release Asset
      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.APPIMAGE_NAME }}
          asset_name: ${{ env.APPIMAGE_NAME }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos-package:
    runs-on: macos-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Step 2: Install Dependencies
      - name: Install Dependencies
        run: |
          npm install -g create-dmg@4.2.0
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        shell: bash

      # Step 3: Clone LNbits into a separate directory
      - name: Clone LNbits
        run: |
          mv .github/packaging packaging
          mkdir -p packaging/macos/LNbits.app/Contents/MacOS/lnbits
          git clone https://github.com/arcbtc/lnbits.git packaging/macos/LNbits.app/Contents/MacOS/lnbits
          cd packaging/macos/LNbits.app/Contents/MacOS/lnbits
          poetry install
          poetry run pip install pyinstaller
          poetry run pyinstaller --onefile --name lnbits \
            --collect-all lnbits \
            --collect-all sqlalchemy \
            --collect-all aiosqlite \
            --hidden-import=passlib.handlers.bcrypt \
            $(poetry run which lnbits)
          cd ../../../../../
          chmod +x "macos/LNbits.app/Contents/MacOS/launch.sh"
          chmod +x "macos/LNbits.app/Contents/MacOS/lnbits/dist/lnbits"
          # Get the release tag name from GitHub Actions
          TAG_NAME=${{ github.event.release.tag_name }}
          DMG_NAME="LNbits-${TAG_NAME}.dmg"
          hdiutil create -volname "LNbits Installer" -srcfolder macos/LNbits.app -ov -format UDZO "macos/$DMG_NAME"
          echo "DMG_NAME=$DMG_NAME" >> $GITHUB_ENV
        shell: bash

      # Step 6: Upload macOS Release Asset
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "packaging/macos/${{ env.DMG_NAME }}"
          asset_name: "${{ env.DMG_NAME }}"
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
