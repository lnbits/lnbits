# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: router.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import enum_type_wrapper

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import lnbits.wallets.lnd_grpc_files.lightning_pb2 as lightning__pb2

DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0crouter.proto\x12\trouterrpc\x1a\x0flightning.proto"\xb7\x05\n\x12SendPaymentRequest\x12\x0c\n\x04\x64\x65st\x18\x01 \x01(\x0c\x12\x0b\n\x03\x61mt\x18\x02 \x01(\x03\x12\x10\n\x08\x61mt_msat\x18\x0c \x01(\x03\x12\x14\n\x0cpayment_hash\x18\x03 \x01(\x0c\x12\x18\n\x10\x66inal_cltv_delta\x18\x04 \x01(\x05\x12\x14\n\x0cpayment_addr\x18\x14 \x01(\x0c\x12\x17\n\x0fpayment_request\x18\x05 \x01(\t\x12\x17\n\x0ftimeout_seconds\x18\x06 \x01(\x05\x12\x15\n\rfee_limit_sat\x18\x07 \x01(\x03\x12\x16\n\x0e\x66\x65\x65_limit_msat\x18\r \x01(\x03\x12\x1e\n\x10outgoing_chan_id\x18\x08 \x01(\x04\x42\x04\x18\x01\x30\x01\x12\x19\n\x11outgoing_chan_ids\x18\x13 \x03(\x04\x12\x17\n\x0flast_hop_pubkey\x18\x0e \x01(\x0c\x12\x12\n\ncltv_limit\x18\t \x01(\x05\x12%\n\x0broute_hints\x18\n \x03(\x0b\x32\x10.lnrpc.RouteHint\x12Q\n\x13\x64\x65st_custom_records\x18\x0b \x03(\x0b\x32\x34.routerrpc.SendPaymentRequest.DestCustomRecordsEntry\x12\x1a\n\x12\x61llow_self_payment\x18\x0f \x01(\x08\x12(\n\rdest_features\x18\x10 \x03(\x0e\x32\x11.lnrpc.FeatureBit\x12\x11\n\tmax_parts\x18\x11 \x01(\r\x12\x1b\n\x13no_inflight_updates\x18\x12 \x01(\x08\x12\x1b\n\x13max_shard_size_msat\x18\x15 \x01(\x04\x12\x0b\n\x03\x61mp\x18\x16 \x01(\x08\x12\x11\n\ttime_pref\x18\x17 \x01(\x01\x1a\x38\n\x16\x44\x65stCustomRecordsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x04\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01"H\n\x13TrackPaymentRequest\x12\x14\n\x0cpayment_hash\x18\x01 \x01(\x0c\x12\x1b\n\x13no_inflight_updates\x18\x02 \x01(\x08"0\n\x0fRouteFeeRequest\x12\x0c\n\x04\x64\x65st\x18\x01 \x01(\x0c\x12\x0f\n\x07\x61mt_sat\x18\x02 \x01(\x03"E\n\x10RouteFeeResponse\x12\x18\n\x10routing_fee_msat\x18\x01 \x01(\x03\x12\x17\n\x0ftime_lock_delay\x18\x02 \x01(\x03"^\n\x12SendToRouteRequest\x12\x14\n\x0cpayment_hash\x18\x01 \x01(\x0c\x12\x1b\n\x05route\x18\x02 \x01(\x0b\x32\x0c.lnrpc.Route\x12\x15\n\rskip_temp_err\x18\x03 \x01(\x08"H\n\x13SendToRouteResponse\x12\x10\n\x08preimage\x18\x01 \x01(\x0c\x12\x1f\n\x07\x66\x61ilure\x18\x02 \x01(\x0b\x32\x0e.lnrpc.Failure"\x1c\n\x1aResetMissionControlRequest"\x1d\n\x1bResetMissionControlResponse"\x1c\n\x1aQueryMissionControlRequest"J\n\x1bQueryMissionControlResponse\x12%\n\x05pairs\x18\x02 \x03(\x0b\x32\x16.routerrpc.PairHistoryJ\x04\x08\x01\x10\x02"T\n\x1cXImportMissionControlRequest\x12%\n\x05pairs\x18\x01 \x03(\x0b\x32\x16.routerrpc.PairHistory\x12\r\n\x05\x66orce\x18\x02 \x01(\x08"\x1f\n\x1dXImportMissionControlResponse"o\n\x0bPairHistory\x12\x11\n\tnode_from\x18\x01 \x01(\x0c\x12\x0f\n\x07node_to\x18\x02 \x01(\x0c\x12$\n\x07history\x18\x07 \x01(\x0b\x32\x13.routerrpc.PairDataJ\x04\x08\x03\x10\x04J\x04\x08\x04\x10\x05J\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07"\x99\x01\n\x08PairData\x12\x11\n\tfail_time\x18\x01 \x01(\x03\x12\x14\n\x0c\x66\x61il_amt_sat\x18\x02 \x01(\x03\x12\x15\n\rfail_amt_msat\x18\x04 \x01(\x03\x12\x14\n\x0csuccess_time\x18\x05 \x01(\x03\x12\x17\n\x0fsuccess_amt_sat\x18\x06 \x01(\x03\x12\x18\n\x10success_amt_msat\x18\x07 \x01(\x03J\x04\x08\x03\x10\x04" \n\x1eGetMissionControlConfigRequest"R\n\x1fGetMissionControlConfigResponse\x12/\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x1f.routerrpc.MissionControlConfig"Q\n\x1eSetMissionControlConfigRequest\x12/\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x1f.routerrpc.MissionControlConfig"!\n\x1fSetMissionControlConfigResponse"\xa3\x01\n\x14MissionControlConfig\x12\x19\n\x11half_life_seconds\x18\x01 \x01(\x04\x12\x17\n\x0fhop_probability\x18\x02 \x01(\x02\x12\x0e\n\x06weight\x18\x03 \x01(\x02\x12\x1f\n\x17maximum_payment_results\x18\x04 \x01(\r\x12&\n\x1eminimum_failure_relax_interval\x18\x05 \x01(\x04"O\n\x17QueryProbabilityRequest\x12\x11\n\tfrom_node\x18\x01 \x01(\x0c\x12\x0f\n\x07to_node\x18\x02 \x01(\x0c\x12\x10\n\x08\x61mt_msat\x18\x03 \x01(\x03"U\n\x18QueryProbabilityResponse\x12\x13\n\x0bprobability\x18\x01 \x01(\x01\x12$\n\x07history\x18\x02 \x01(\x0b\x32\x13.routerrpc.PairData"\x88\x01\n\x11\x42uildRouteRequest\x12\x10\n\x08\x61mt_msat\x18\x01 \x01(\x03\x12\x18\n\x10\x66inal_cltv_delta\x18\x02 \x01(\x05\x12\x1c\n\x10outgoing_chan_id\x18\x03 \x01(\x04\x42\x02\x30\x01\x12\x13\n\x0bhop_pubkeys\x18\x04 \x03(\x0c\x12\x14\n\x0cpayment_addr\x18\x05 \x01(\x0c"1\n\x12\x42uildRouteResponse\x12\x1b\n\x05route\x18\x01 \x01(\x0b\x32\x0c.lnrpc.Route"\x1c\n\x1aSubscribeHtlcEventsRequest"\xdc\x03\n\tHtlcEvent\x12\x1b\n\x13incoming_channel_id\x18\x01 \x01(\x04\x12\x1b\n\x13outgoing_channel_id\x18\x02 \x01(\x04\x12\x18\n\x10incoming_htlc_id\x18\x03 \x01(\x04\x12\x18\n\x10outgoing_htlc_id\x18\x04 \x01(\x04\x12\x14\n\x0ctimestamp_ns\x18\x05 \x01(\x04\x12\x32\n\nevent_type\x18\x06 \x01(\x0e\x32\x1e.routerrpc.HtlcEvent.EventType\x12\x30\n\rforward_event\x18\x07 \x01(\x0b\x32\x17.routerrpc.ForwardEventH\x00\x12\x39\n\x12\x66orward_fail_event\x18\x08 \x01(\x0b\x32\x1b.routerrpc.ForwardFailEventH\x00\x12.\n\x0csettle_event\x18\t \x01(\x0b\x32\x16.routerrpc.SettleEventH\x00\x12\x33\n\x0flink_fail_event\x18\n \x01(\x0b\x32\x18.routerrpc.LinkFailEventH\x00"<\n\tEventType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x08\n\x04SEND\x10\x01\x12\x0b\n\x07RECEIVE\x10\x02\x12\x0b\n\x07\x46ORWARD\x10\x03\x42\x07\n\x05\x65vent"v\n\x08HtlcInfo\x12\x19\n\x11incoming_timelock\x18\x01 \x01(\r\x12\x19\n\x11outgoing_timelock\x18\x02 \x01(\r\x12\x19\n\x11incoming_amt_msat\x18\x03 \x01(\x04\x12\x19\n\x11outgoing_amt_msat\x18\x04 \x01(\x04"1\n\x0c\x46orwardEvent\x12!\n\x04info\x18\x01 \x01(\x0b\x32\x13.routerrpc.HtlcInfo"\x12\n\x10\x46orwardFailEvent"\x1f\n\x0bSettleEvent\x12\x10\n\x08preimage\x18\x01 \x01(\x0c"\xae\x01\n\rLinkFailEvent\x12!\n\x04info\x18\x01 \x01(\x0b\x32\x13.routerrpc.HtlcInfo\x12\x30\n\x0cwire_failure\x18\x02 \x01(\x0e\x32\x1a.lnrpc.Failure.FailureCode\x12\x30\n\x0e\x66\x61ilure_detail\x18\x03 \x01(\x0e\x32\x18.routerrpc.FailureDetail\x12\x16\n\x0e\x66\x61ilure_string\x18\x04 \x01(\t"r\n\rPaymentStatus\x12&\n\x05state\x18\x01 \x01(\x0e\x32\x17.routerrpc.PaymentState\x12\x10\n\x08preimage\x18\x02 \x01(\x0c\x12!\n\x05htlcs\x18\x04 \x03(\x0b\x32\x12.lnrpc.HTLCAttemptJ\x04\x08\x03\x10\x04".\n\nCircuitKey\x12\x0f\n\x07\x63han_id\x18\x01 \x01(\x04\x12\x0f\n\x07htlc_id\x18\x02 \x01(\x04"\x97\x03\n\x1b\x46orwardHtlcInterceptRequest\x12\x33\n\x14incoming_circuit_key\x18\x01 \x01(\x0b\x32\x15.routerrpc.CircuitKey\x12\x1c\n\x14incoming_amount_msat\x18\x05 \x01(\x04\x12\x17\n\x0fincoming_expiry\x18\x06 \x01(\r\x12\x14\n\x0cpayment_hash\x18\x02 \x01(\x0c\x12"\n\x1aoutgoing_requested_chan_id\x18\x07 \x01(\x04\x12\x1c\n\x14outgoing_amount_msat\x18\x03 \x01(\x04\x12\x17\n\x0foutgoing_expiry\x18\x04 \x01(\r\x12Q\n\x0e\x63ustom_records\x18\x08 \x03(\x0b\x32\x39.routerrpc.ForwardHtlcInterceptRequest.CustomRecordsEntry\x12\x12\n\nonion_blob\x18\t \x01(\x0c\x1a\x34\n\x12\x43ustomRecordsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x04\x12\r\n\x05value\x18\x02 \x01(\x0c:\x02\x38\x01"\xe5\x01\n\x1c\x46orwardHtlcInterceptResponse\x12\x33\n\x14incoming_circuit_key\x18\x01 \x01(\x0b\x32\x15.routerrpc.CircuitKey\x12\x33\n\x06\x61\x63tion\x18\x02 \x01(\x0e\x32#.routerrpc.ResolveHoldForwardAction\x12\x10\n\x08preimage\x18\x03 \x01(\x0c\x12\x17\n\x0f\x66\x61ilure_message\x18\x04 \x01(\x0c\x12\x30\n\x0c\x66\x61ilure_code\x18\x05 \x01(\x0e\x32\x1a.lnrpc.Failure.FailureCode"o\n\x17UpdateChanStatusRequest\x12\'\n\nchan_point\x18\x01 \x01(\x0b\x32\x13.lnrpc.ChannelPoint\x12+\n\x06\x61\x63tion\x18\x02 \x01(\x0e\x32\x1b.routerrpc.ChanStatusAction"\x1a\n\x18UpdateChanStatusResponse*\x81\x04\n\rFailureDetail\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tNO_DETAIL\x10\x01\x12\x10\n\x0cONION_DECODE\x10\x02\x12\x15\n\x11LINK_NOT_ELIGIBLE\x10\x03\x12\x14\n\x10ON_CHAIN_TIMEOUT\x10\x04\x12\x14\n\x10HTLC_EXCEEDS_MAX\x10\x05\x12\x18\n\x14INSUFFICIENT_BALANCE\x10\x06\x12\x16\n\x12INCOMPLETE_FORWARD\x10\x07\x12\x13\n\x0fHTLC_ADD_FAILED\x10\x08\x12\x15\n\x11\x46ORWARDS_DISABLED\x10\t\x12\x14\n\x10INVOICE_CANCELED\x10\n\x12\x15\n\x11INVOICE_UNDERPAID\x10\x0b\x12\x1b\n\x17INVOICE_EXPIRY_TOO_SOON\x10\x0c\x12\x14\n\x10INVOICE_NOT_OPEN\x10\r\x12\x17\n\x13MPP_INVOICE_TIMEOUT\x10\x0e\x12\x14\n\x10\x41\x44\x44RESS_MISMATCH\x10\x0f\x12\x16\n\x12SET_TOTAL_MISMATCH\x10\x10\x12\x15\n\x11SET_TOTAL_TOO_LOW\x10\x11\x12\x10\n\x0cSET_OVERPAID\x10\x12\x12\x13\n\x0fUNKNOWN_INVOICE\x10\x13\x12\x13\n\x0fINVALID_KEYSEND\x10\x14\x12\x13\n\x0fMPP_IN_PROGRESS\x10\x15\x12\x12\n\x0e\x43IRCULAR_ROUTE\x10\x16*\xae\x01\n\x0cPaymentState\x12\r\n\tIN_FLIGHT\x10\x00\x12\r\n\tSUCCEEDED\x10\x01\x12\x12\n\x0e\x46\x41ILED_TIMEOUT\x10\x02\x12\x13\n\x0f\x46\x41ILED_NO_ROUTE\x10\x03\x12\x10\n\x0c\x46\x41ILED_ERROR\x10\x04\x12$\n FAILED_INCORRECT_PAYMENT_DETAILS\x10\x05\x12\x1f\n\x1b\x46\x41ILED_INSUFFICIENT_BALANCE\x10\x06*<\n\x18ResolveHoldForwardAction\x12\n\n\x06SETTLE\x10\x00\x12\x08\n\x04\x46\x41IL\x10\x01\x12\n\n\x06RESUME\x10\x02*5\n\x10\x43hanStatusAction\x12\n\n\x06\x45NABLE\x10\x00\x12\x0b\n\x07\x44ISABLE\x10\x01\x12\x08\n\x04\x41UTO\x10\x02\x32\xf1\x0b\n\x06Router\x12@\n\rSendPaymentV2\x12\x1d.routerrpc.SendPaymentRequest\x1a\x0e.lnrpc.Payment0\x01\x12\x42\n\x0eTrackPaymentV2\x12\x1e.routerrpc.TrackPaymentRequest\x1a\x0e.lnrpc.Payment0\x01\x12K\n\x10\x45stimateRouteFee\x12\x1a.routerrpc.RouteFeeRequest\x1a\x1b.routerrpc.RouteFeeResponse\x12Q\n\x0bSendToRoute\x12\x1d.routerrpc.SendToRouteRequest\x1a\x1e.routerrpc.SendToRouteResponse"\x03\x88\x02\x01\x12\x42\n\rSendToRouteV2\x12\x1d.routerrpc.SendToRouteRequest\x1a\x12.lnrpc.HTLCAttempt\x12\x64\n\x13ResetMissionControl\x12%.routerrpc.ResetMissionControlRequest\x1a&.routerrpc.ResetMissionControlResponse\x12\x64\n\x13QueryMissionControl\x12%.routerrpc.QueryMissionControlRequest\x1a&.routerrpc.QueryMissionControlResponse\x12j\n\x15XImportMissionControl\x12\'.routerrpc.XImportMissionControlRequest\x1a(.routerrpc.XImportMissionControlResponse\x12p\n\x17GetMissionControlConfig\x12).routerrpc.GetMissionControlConfigRequest\x1a*.routerrpc.GetMissionControlConfigResponse\x12p\n\x17SetMissionControlConfig\x12).routerrpc.SetMissionControlConfigRequest\x1a*.routerrpc.SetMissionControlConfigResponse\x12[\n\x10QueryProbability\x12".routerrpc.QueryProbabilityRequest\x1a#.routerrpc.QueryProbabilityResponse\x12I\n\nBuildRoute\x12\x1c.routerrpc.BuildRouteRequest\x1a\x1d.routerrpc.BuildRouteResponse\x12T\n\x13SubscribeHtlcEvents\x12%.routerrpc.SubscribeHtlcEventsRequest\x1a\x14.routerrpc.HtlcEvent0\x01\x12M\n\x0bSendPayment\x12\x1d.routerrpc.SendPaymentRequest\x1a\x18.routerrpc.PaymentStatus"\x03\x88\x02\x01\x30\x01\x12O\n\x0cTrackPayment\x12\x1e.routerrpc.TrackPaymentRequest\x1a\x18.routerrpc.PaymentStatus"\x03\x88\x02\x01\x30\x01\x12\x66\n\x0fHtlcInterceptor\x12\'.routerrpc.ForwardHtlcInterceptResponse\x1a&.routerrpc.ForwardHtlcInterceptRequest(\x01\x30\x01\x12[\n\x10UpdateChanStatus\x12".routerrpc.UpdateChanStatusRequest\x1a#.routerrpc.UpdateChanStatusResponseB1Z/github.com/lightningnetwork/lnd/lnrpc/routerrpcb\x06proto3'
)

_FAILUREDETAIL = DESCRIPTOR.enum_types_by_name["FailureDetail"]
FailureDetail = enum_type_wrapper.EnumTypeWrapper(_FAILUREDETAIL)
_PAYMENTSTATE = DESCRIPTOR.enum_types_by_name["PaymentState"]
PaymentState = enum_type_wrapper.EnumTypeWrapper(_PAYMENTSTATE)
_RESOLVEHOLDFORWARDACTION = DESCRIPTOR.enum_types_by_name["ResolveHoldForwardAction"]
ResolveHoldForwardAction = enum_type_wrapper.EnumTypeWrapper(_RESOLVEHOLDFORWARDACTION)
_CHANSTATUSACTION = DESCRIPTOR.enum_types_by_name["ChanStatusAction"]
ChanStatusAction = enum_type_wrapper.EnumTypeWrapper(_CHANSTATUSACTION)
UNKNOWN = 0
NO_DETAIL = 1
ONION_DECODE = 2
LINK_NOT_ELIGIBLE = 3
ON_CHAIN_TIMEOUT = 4
HTLC_EXCEEDS_MAX = 5
INSUFFICIENT_BALANCE = 6
INCOMPLETE_FORWARD = 7
HTLC_ADD_FAILED = 8
FORWARDS_DISABLED = 9
INVOICE_CANCELED = 10
INVOICE_UNDERPAID = 11
INVOICE_EXPIRY_TOO_SOON = 12
INVOICE_NOT_OPEN = 13
MPP_INVOICE_TIMEOUT = 14
ADDRESS_MISMATCH = 15
SET_TOTAL_MISMATCH = 16
SET_TOTAL_TOO_LOW = 17
SET_OVERPAID = 18
UNKNOWN_INVOICE = 19
INVALID_KEYSEND = 20
MPP_IN_PROGRESS = 21
CIRCULAR_ROUTE = 22
IN_FLIGHT = 0
SUCCEEDED = 1
FAILED_TIMEOUT = 2
FAILED_NO_ROUTE = 3
FAILED_ERROR = 4
FAILED_INCORRECT_PAYMENT_DETAILS = 5
FAILED_INSUFFICIENT_BALANCE = 6
SETTLE = 0
FAIL = 1
RESUME = 2
ENABLE = 0
DISABLE = 1
AUTO = 2


_SENDPAYMENTREQUEST = DESCRIPTOR.message_types_by_name["SendPaymentRequest"]
_SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY = _SENDPAYMENTREQUEST.nested_types_by_name[
    "DestCustomRecordsEntry"
]
_TRACKPAYMENTREQUEST = DESCRIPTOR.message_types_by_name["TrackPaymentRequest"]
_ROUTEFEEREQUEST = DESCRIPTOR.message_types_by_name["RouteFeeRequest"]
_ROUTEFEERESPONSE = DESCRIPTOR.message_types_by_name["RouteFeeResponse"]
_SENDTOROUTEREQUEST = DESCRIPTOR.message_types_by_name["SendToRouteRequest"]
_SENDTOROUTERESPONSE = DESCRIPTOR.message_types_by_name["SendToRouteResponse"]
_RESETMISSIONCONTROLREQUEST = DESCRIPTOR.message_types_by_name[
    "ResetMissionControlRequest"
]
_RESETMISSIONCONTROLRESPONSE = DESCRIPTOR.message_types_by_name[
    "ResetMissionControlResponse"
]
_QUERYMISSIONCONTROLREQUEST = DESCRIPTOR.message_types_by_name[
    "QueryMissionControlRequest"
]
_QUERYMISSIONCONTROLRESPONSE = DESCRIPTOR.message_types_by_name[
    "QueryMissionControlResponse"
]
_XIMPORTMISSIONCONTROLREQUEST = DESCRIPTOR.message_types_by_name[
    "XImportMissionControlRequest"
]
_XIMPORTMISSIONCONTROLRESPONSE = DESCRIPTOR.message_types_by_name[
    "XImportMissionControlResponse"
]
_PAIRHISTORY = DESCRIPTOR.message_types_by_name["PairHistory"]
_PAIRDATA = DESCRIPTOR.message_types_by_name["PairData"]
_GETMISSIONCONTROLCONFIGREQUEST = DESCRIPTOR.message_types_by_name[
    "GetMissionControlConfigRequest"
]
_GETMISSIONCONTROLCONFIGRESPONSE = DESCRIPTOR.message_types_by_name[
    "GetMissionControlConfigResponse"
]
_SETMISSIONCONTROLCONFIGREQUEST = DESCRIPTOR.message_types_by_name[
    "SetMissionControlConfigRequest"
]
_SETMISSIONCONTROLCONFIGRESPONSE = DESCRIPTOR.message_types_by_name[
    "SetMissionControlConfigResponse"
]
_MISSIONCONTROLCONFIG = DESCRIPTOR.message_types_by_name["MissionControlConfig"]
_QUERYPROBABILITYREQUEST = DESCRIPTOR.message_types_by_name["QueryProbabilityRequest"]
_QUERYPROBABILITYRESPONSE = DESCRIPTOR.message_types_by_name["QueryProbabilityResponse"]
_BUILDROUTEREQUEST = DESCRIPTOR.message_types_by_name["BuildRouteRequest"]
_BUILDROUTERESPONSE = DESCRIPTOR.message_types_by_name["BuildRouteResponse"]
_SUBSCRIBEHTLCEVENTSREQUEST = DESCRIPTOR.message_types_by_name[
    "SubscribeHtlcEventsRequest"
]
_HTLCEVENT = DESCRIPTOR.message_types_by_name["HtlcEvent"]
_HTLCINFO = DESCRIPTOR.message_types_by_name["HtlcInfo"]
_FORWARDEVENT = DESCRIPTOR.message_types_by_name["ForwardEvent"]
_FORWARDFAILEVENT = DESCRIPTOR.message_types_by_name["ForwardFailEvent"]
_SETTLEEVENT = DESCRIPTOR.message_types_by_name["SettleEvent"]
_LINKFAILEVENT = DESCRIPTOR.message_types_by_name["LinkFailEvent"]
_PAYMENTSTATUS = DESCRIPTOR.message_types_by_name["PaymentStatus"]
_CIRCUITKEY = DESCRIPTOR.message_types_by_name["CircuitKey"]
_FORWARDHTLCINTERCEPTREQUEST = DESCRIPTOR.message_types_by_name[
    "ForwardHtlcInterceptRequest"
]
_FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY = (
    _FORWARDHTLCINTERCEPTREQUEST.nested_types_by_name["CustomRecordsEntry"]
)
_FORWARDHTLCINTERCEPTRESPONSE = DESCRIPTOR.message_types_by_name[
    "ForwardHtlcInterceptResponse"
]
_UPDATECHANSTATUSREQUEST = DESCRIPTOR.message_types_by_name["UpdateChanStatusRequest"]
_UPDATECHANSTATUSRESPONSE = DESCRIPTOR.message_types_by_name["UpdateChanStatusResponse"]
_HTLCEVENT_EVENTTYPE = _HTLCEVENT.enum_types_by_name["EventType"]
SendPaymentRequest = _reflection.GeneratedProtocolMessageType(
    "SendPaymentRequest",
    (_message.Message,),
    {
        "DestCustomRecordsEntry": _reflection.GeneratedProtocolMessageType(
            "DestCustomRecordsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY,
                "__module__": "router_pb2"
                # @@protoc_insertion_point(class_scope:routerrpc.SendPaymentRequest.DestCustomRecordsEntry)
            },
        ),
        "DESCRIPTOR": _SENDPAYMENTREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SendPaymentRequest)
    },
)
_sym_db.RegisterMessage(SendPaymentRequest)
_sym_db.RegisterMessage(SendPaymentRequest.DestCustomRecordsEntry)

TrackPaymentRequest = _reflection.GeneratedProtocolMessageType(
    "TrackPaymentRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _TRACKPAYMENTREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.TrackPaymentRequest)
    },
)
_sym_db.RegisterMessage(TrackPaymentRequest)

RouteFeeRequest = _reflection.GeneratedProtocolMessageType(
    "RouteFeeRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _ROUTEFEEREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.RouteFeeRequest)
    },
)
_sym_db.RegisterMessage(RouteFeeRequest)

RouteFeeResponse = _reflection.GeneratedProtocolMessageType(
    "RouteFeeResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _ROUTEFEERESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.RouteFeeResponse)
    },
)
_sym_db.RegisterMessage(RouteFeeResponse)

SendToRouteRequest = _reflection.GeneratedProtocolMessageType(
    "SendToRouteRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _SENDTOROUTEREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SendToRouteRequest)
    },
)
_sym_db.RegisterMessage(SendToRouteRequest)

SendToRouteResponse = _reflection.GeneratedProtocolMessageType(
    "SendToRouteResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _SENDTOROUTERESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SendToRouteResponse)
    },
)
_sym_db.RegisterMessage(SendToRouteResponse)

ResetMissionControlRequest = _reflection.GeneratedProtocolMessageType(
    "ResetMissionControlRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _RESETMISSIONCONTROLREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ResetMissionControlRequest)
    },
)
_sym_db.RegisterMessage(ResetMissionControlRequest)

ResetMissionControlResponse = _reflection.GeneratedProtocolMessageType(
    "ResetMissionControlResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _RESETMISSIONCONTROLRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ResetMissionControlResponse)
    },
)
_sym_db.RegisterMessage(ResetMissionControlResponse)

QueryMissionControlRequest = _reflection.GeneratedProtocolMessageType(
    "QueryMissionControlRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _QUERYMISSIONCONTROLREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.QueryMissionControlRequest)
    },
)
_sym_db.RegisterMessage(QueryMissionControlRequest)

QueryMissionControlResponse = _reflection.GeneratedProtocolMessageType(
    "QueryMissionControlResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _QUERYMISSIONCONTROLRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.QueryMissionControlResponse)
    },
)
_sym_db.RegisterMessage(QueryMissionControlResponse)

XImportMissionControlRequest = _reflection.GeneratedProtocolMessageType(
    "XImportMissionControlRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _XIMPORTMISSIONCONTROLREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.XImportMissionControlRequest)
    },
)
_sym_db.RegisterMessage(XImportMissionControlRequest)

XImportMissionControlResponse = _reflection.GeneratedProtocolMessageType(
    "XImportMissionControlResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _XIMPORTMISSIONCONTROLRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.XImportMissionControlResponse)
    },
)
_sym_db.RegisterMessage(XImportMissionControlResponse)

PairHistory = _reflection.GeneratedProtocolMessageType(
    "PairHistory",
    (_message.Message,),
    {
        "DESCRIPTOR": _PAIRHISTORY,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.PairHistory)
    },
)
_sym_db.RegisterMessage(PairHistory)

PairData = _reflection.GeneratedProtocolMessageType(
    "PairData",
    (_message.Message,),
    {
        "DESCRIPTOR": _PAIRDATA,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.PairData)
    },
)
_sym_db.RegisterMessage(PairData)

GetMissionControlConfigRequest = _reflection.GeneratedProtocolMessageType(
    "GetMissionControlConfigRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETMISSIONCONTROLCONFIGREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.GetMissionControlConfigRequest)
    },
)
_sym_db.RegisterMessage(GetMissionControlConfigRequest)

GetMissionControlConfigResponse = _reflection.GeneratedProtocolMessageType(
    "GetMissionControlConfigResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _GETMISSIONCONTROLCONFIGRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.GetMissionControlConfigResponse)
    },
)
_sym_db.RegisterMessage(GetMissionControlConfigResponse)

SetMissionControlConfigRequest = _reflection.GeneratedProtocolMessageType(
    "SetMissionControlConfigRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _SETMISSIONCONTROLCONFIGREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SetMissionControlConfigRequest)
    },
)
_sym_db.RegisterMessage(SetMissionControlConfigRequest)

SetMissionControlConfigResponse = _reflection.GeneratedProtocolMessageType(
    "SetMissionControlConfigResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _SETMISSIONCONTROLCONFIGRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SetMissionControlConfigResponse)
    },
)
_sym_db.RegisterMessage(SetMissionControlConfigResponse)

MissionControlConfig = _reflection.GeneratedProtocolMessageType(
    "MissionControlConfig",
    (_message.Message,),
    {
        "DESCRIPTOR": _MISSIONCONTROLCONFIG,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.MissionControlConfig)
    },
)
_sym_db.RegisterMessage(MissionControlConfig)

QueryProbabilityRequest = _reflection.GeneratedProtocolMessageType(
    "QueryProbabilityRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _QUERYPROBABILITYREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.QueryProbabilityRequest)
    },
)
_sym_db.RegisterMessage(QueryProbabilityRequest)

QueryProbabilityResponse = _reflection.GeneratedProtocolMessageType(
    "QueryProbabilityResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _QUERYPROBABILITYRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.QueryProbabilityResponse)
    },
)
_sym_db.RegisterMessage(QueryProbabilityResponse)

BuildRouteRequest = _reflection.GeneratedProtocolMessageType(
    "BuildRouteRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _BUILDROUTEREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.BuildRouteRequest)
    },
)
_sym_db.RegisterMessage(BuildRouteRequest)

BuildRouteResponse = _reflection.GeneratedProtocolMessageType(
    "BuildRouteResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _BUILDROUTERESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.BuildRouteResponse)
    },
)
_sym_db.RegisterMessage(BuildRouteResponse)

SubscribeHtlcEventsRequest = _reflection.GeneratedProtocolMessageType(
    "SubscribeHtlcEventsRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _SUBSCRIBEHTLCEVENTSREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SubscribeHtlcEventsRequest)
    },
)
_sym_db.RegisterMessage(SubscribeHtlcEventsRequest)

HtlcEvent = _reflection.GeneratedProtocolMessageType(
    "HtlcEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _HTLCEVENT,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.HtlcEvent)
    },
)
_sym_db.RegisterMessage(HtlcEvent)

HtlcInfo = _reflection.GeneratedProtocolMessageType(
    "HtlcInfo",
    (_message.Message,),
    {
        "DESCRIPTOR": _HTLCINFO,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.HtlcInfo)
    },
)
_sym_db.RegisterMessage(HtlcInfo)

ForwardEvent = _reflection.GeneratedProtocolMessageType(
    "ForwardEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _FORWARDEVENT,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ForwardEvent)
    },
)
_sym_db.RegisterMessage(ForwardEvent)

ForwardFailEvent = _reflection.GeneratedProtocolMessageType(
    "ForwardFailEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _FORWARDFAILEVENT,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ForwardFailEvent)
    },
)
_sym_db.RegisterMessage(ForwardFailEvent)

SettleEvent = _reflection.GeneratedProtocolMessageType(
    "SettleEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _SETTLEEVENT,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.SettleEvent)
    },
)
_sym_db.RegisterMessage(SettleEvent)

LinkFailEvent = _reflection.GeneratedProtocolMessageType(
    "LinkFailEvent",
    (_message.Message,),
    {
        "DESCRIPTOR": _LINKFAILEVENT,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.LinkFailEvent)
    },
)
_sym_db.RegisterMessage(LinkFailEvent)

PaymentStatus = _reflection.GeneratedProtocolMessageType(
    "PaymentStatus",
    (_message.Message,),
    {
        "DESCRIPTOR": _PAYMENTSTATUS,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.PaymentStatus)
    },
)
_sym_db.RegisterMessage(PaymentStatus)

CircuitKey = _reflection.GeneratedProtocolMessageType(
    "CircuitKey",
    (_message.Message,),
    {
        "DESCRIPTOR": _CIRCUITKEY,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.CircuitKey)
    },
)
_sym_db.RegisterMessage(CircuitKey)

ForwardHtlcInterceptRequest = _reflection.GeneratedProtocolMessageType(
    "ForwardHtlcInterceptRequest",
    (_message.Message,),
    {
        "CustomRecordsEntry": _reflection.GeneratedProtocolMessageType(
            "CustomRecordsEntry",
            (_message.Message,),
            {
                "DESCRIPTOR": _FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY,
                "__module__": "router_pb2"
                # @@protoc_insertion_point(class_scope:routerrpc.ForwardHtlcInterceptRequest.CustomRecordsEntry)
            },
        ),
        "DESCRIPTOR": _FORWARDHTLCINTERCEPTREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ForwardHtlcInterceptRequest)
    },
)
_sym_db.RegisterMessage(ForwardHtlcInterceptRequest)
_sym_db.RegisterMessage(ForwardHtlcInterceptRequest.CustomRecordsEntry)

ForwardHtlcInterceptResponse = _reflection.GeneratedProtocolMessageType(
    "ForwardHtlcInterceptResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _FORWARDHTLCINTERCEPTRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.ForwardHtlcInterceptResponse)
    },
)
_sym_db.RegisterMessage(ForwardHtlcInterceptResponse)

UpdateChanStatusRequest = _reflection.GeneratedProtocolMessageType(
    "UpdateChanStatusRequest",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATECHANSTATUSREQUEST,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.UpdateChanStatusRequest)
    },
)
_sym_db.RegisterMessage(UpdateChanStatusRequest)

UpdateChanStatusResponse = _reflection.GeneratedProtocolMessageType(
    "UpdateChanStatusResponse",
    (_message.Message,),
    {
        "DESCRIPTOR": _UPDATECHANSTATUSRESPONSE,
        "__module__": "router_pb2"
        # @@protoc_insertion_point(class_scope:routerrpc.UpdateChanStatusResponse)
    },
)
_sym_db.RegisterMessage(UpdateChanStatusResponse)

_ROUTER = DESCRIPTOR.services_by_name["Router"]
if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    DESCRIPTOR._serialized_options = (
        b"Z/github.com/lightningnetwork/lnd/lnrpc/routerrpc"
    )
    _SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY._options = None
    _SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY._serialized_options = b"8\001"
    _SENDPAYMENTREQUEST.fields_by_name["outgoing_chan_id"]._options = None
    _SENDPAYMENTREQUEST.fields_by_name[
        "outgoing_chan_id"
    ]._serialized_options = b"\030\0010\001"
    _BUILDROUTEREQUEST.fields_by_name["outgoing_chan_id"]._options = None
    _BUILDROUTEREQUEST.fields_by_name["outgoing_chan_id"]._serialized_options = b"0\001"
    _FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY._options = None
    _FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY._serialized_options = b"8\001"
    _ROUTER.methods_by_name["SendToRoute"]._options = None
    _ROUTER.methods_by_name["SendToRoute"]._serialized_options = b"\210\002\001"
    _ROUTER.methods_by_name["SendPayment"]._options = None
    _ROUTER.methods_by_name["SendPayment"]._serialized_options = b"\210\002\001"
    _ROUTER.methods_by_name["TrackPayment"]._options = None
    _ROUTER.methods_by_name["TrackPayment"]._serialized_options = b"\210\002\001"
    _FAILUREDETAIL._serialized_start = 4280
    _FAILUREDETAIL._serialized_end = 4793
    _PAYMENTSTATE._serialized_start = 4796
    _PAYMENTSTATE._serialized_end = 4970
    _RESOLVEHOLDFORWARDACTION._serialized_start = 4972
    _RESOLVEHOLDFORWARDACTION._serialized_end = 5032
    _CHANSTATUSACTION._serialized_start = 5034
    _CHANSTATUSACTION._serialized_end = 5087
    _SENDPAYMENTREQUEST._serialized_start = 45
    _SENDPAYMENTREQUEST._serialized_end = 740
    _SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY._serialized_start = 684
    _SENDPAYMENTREQUEST_DESTCUSTOMRECORDSENTRY._serialized_end = 740
    _TRACKPAYMENTREQUEST._serialized_start = 742
    _TRACKPAYMENTREQUEST._serialized_end = 814
    _ROUTEFEEREQUEST._serialized_start = 816
    _ROUTEFEEREQUEST._serialized_end = 864
    _ROUTEFEERESPONSE._serialized_start = 866
    _ROUTEFEERESPONSE._serialized_end = 935
    _SENDTOROUTEREQUEST._serialized_start = 937
    _SENDTOROUTEREQUEST._serialized_end = 1031
    _SENDTOROUTERESPONSE._serialized_start = 1033
    _SENDTOROUTERESPONSE._serialized_end = 1105
    _RESETMISSIONCONTROLREQUEST._serialized_start = 1107
    _RESETMISSIONCONTROLREQUEST._serialized_end = 1135
    _RESETMISSIONCONTROLRESPONSE._serialized_start = 1137
    _RESETMISSIONCONTROLRESPONSE._serialized_end = 1166
    _QUERYMISSIONCONTROLREQUEST._serialized_start = 1168
    _QUERYMISSIONCONTROLREQUEST._serialized_end = 1196
    _QUERYMISSIONCONTROLRESPONSE._serialized_start = 1198
    _QUERYMISSIONCONTROLRESPONSE._serialized_end = 1272
    _XIMPORTMISSIONCONTROLREQUEST._serialized_start = 1274
    _XIMPORTMISSIONCONTROLREQUEST._serialized_end = 1358
    _XIMPORTMISSIONCONTROLRESPONSE._serialized_start = 1360
    _XIMPORTMISSIONCONTROLRESPONSE._serialized_end = 1391
    _PAIRHISTORY._serialized_start = 1393
    _PAIRHISTORY._serialized_end = 1504
    _PAIRDATA._serialized_start = 1507
    _PAIRDATA._serialized_end = 1660
    _GETMISSIONCONTROLCONFIGREQUEST._serialized_start = 1662
    _GETMISSIONCONTROLCONFIGREQUEST._serialized_end = 1694
    _GETMISSIONCONTROLCONFIGRESPONSE._serialized_start = 1696
    _GETMISSIONCONTROLCONFIGRESPONSE._serialized_end = 1778
    _SETMISSIONCONTROLCONFIGREQUEST._serialized_start = 1780
    _SETMISSIONCONTROLCONFIGREQUEST._serialized_end = 1861
    _SETMISSIONCONTROLCONFIGRESPONSE._serialized_start = 1863
    _SETMISSIONCONTROLCONFIGRESPONSE._serialized_end = 1896
    _MISSIONCONTROLCONFIG._serialized_start = 1899
    _MISSIONCONTROLCONFIG._serialized_end = 2062
    _QUERYPROBABILITYREQUEST._serialized_start = 2064
    _QUERYPROBABILITYREQUEST._serialized_end = 2143
    _QUERYPROBABILITYRESPONSE._serialized_start = 2145
    _QUERYPROBABILITYRESPONSE._serialized_end = 2230
    _BUILDROUTEREQUEST._serialized_start = 2233
    _BUILDROUTEREQUEST._serialized_end = 2369
    _BUILDROUTERESPONSE._serialized_start = 2371
    _BUILDROUTERESPONSE._serialized_end = 2420
    _SUBSCRIBEHTLCEVENTSREQUEST._serialized_start = 2422
    _SUBSCRIBEHTLCEVENTSREQUEST._serialized_end = 2450
    _HTLCEVENT._serialized_start = 2453
    _HTLCEVENT._serialized_end = 2929
    _HTLCEVENT_EVENTTYPE._serialized_start = 2860
    _HTLCEVENT_EVENTTYPE._serialized_end = 2920
    _HTLCINFO._serialized_start = 2931
    _HTLCINFO._serialized_end = 3049
    _FORWARDEVENT._serialized_start = 3051
    _FORWARDEVENT._serialized_end = 3100
    _FORWARDFAILEVENT._serialized_start = 3102
    _FORWARDFAILEVENT._serialized_end = 3120
    _SETTLEEVENT._serialized_start = 3122
    _SETTLEEVENT._serialized_end = 3153
    _LINKFAILEVENT._serialized_start = 3156
    _LINKFAILEVENT._serialized_end = 3330
    _PAYMENTSTATUS._serialized_start = 3332
    _PAYMENTSTATUS._serialized_end = 3446
    _CIRCUITKEY._serialized_start = 3448
    _CIRCUITKEY._serialized_end = 3494
    _FORWARDHTLCINTERCEPTREQUEST._serialized_start = 3497
    _FORWARDHTLCINTERCEPTREQUEST._serialized_end = 3904
    _FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY._serialized_start = 3852
    _FORWARDHTLCINTERCEPTREQUEST_CUSTOMRECORDSENTRY._serialized_end = 3904
    _FORWARDHTLCINTERCEPTRESPONSE._serialized_start = 3907
    _FORWARDHTLCINTERCEPTRESPONSE._serialized_end = 4136
    _UPDATECHANSTATUSREQUEST._serialized_start = 4138
    _UPDATECHANSTATUSREQUEST._serialized_end = 4249
    _UPDATECHANSTATUSRESPONSE._serialized_start = 4251
    _UPDATECHANSTATUSRESPONSE._serialized_end = 4277
    _ROUTER._serialized_start = 5090
    _ROUTER._serialized_end = 6611
# @@protoc_insertion_point(module_scope)
