# Stage 1: LNbits build environment
FROM python:3.12-slim-bookworm AS builder

RUN apt-get update && \
    apt-get install -y curl pkg-config build-essential libnss-myhostname

RUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5
ENV PATH="/root/.local/bin:$PATH"

WORKDIR /app

# Copy poetry files only for dependency resolution
COPY pyproject.toml poetry.lock ./
RUN mkdir data

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

ARG POETRY_INSTALL_ARGS="--only main"
RUN poetry install ${POETRY_INSTALL_ARGS}

# Stage 2: Pull boltzd binary
FROM boltz/boltz-client:latest AS boltz

# Stage 3: Final runtime image
FROM python:3.12-slim-bookworm

# Install PostgreSQL client for backups + netcat for health checks / boltzd wait
RUN apt-get update && apt-get -y upgrade && \
    apt-get install -y gnupg2 curl lsb-release netcat-openbsd && \
    echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
    curl -s https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update && \
    apt-get -y install postgresql-client-14 postgresql-client-common && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Install poetry again for runtime use
RUN curl -sSL https://install.python-poetry.org | python3 - --version 1.8.5
ENV PATH="/root/.local/bin:$PATH"

ENV POETRY_NO_INTERACTION=1 \
    POETRY_VIRTUALENVS_IN_PROJECT=1 \
    POETRY_VIRTUALENVS_CREATE=1 \
    VIRTUAL_ENV=/app/.venv \
    PATH="/app/.venv/bin:$PATH"

WORKDIR /app

# Copy project files
COPY . .
COPY --from=builder /app/.venv .venv
COPY --from=boltz /bin/boltzd /usr/local/bin/

# Reinstall dependencies just in case (needed for CMD usage)
ARG POETRY_INSTALL_ARGS="--only main"
RUN poetry install ${POETRY_INSTALL_ARGS}

# LNbits + boltzd configuration
ENV LNBITS_PORT="5000"
ENV LNBITS_HOST="0.0.0.0"
ENV LNBITS_BACKEND_WALLET_CLASS="BoltzWallet"
ENV BOLTZ_CLIENT_ENDPOINT="127.0.0.1:9002"
ENV BOLTZ_CLIENT_MACAROON="/root/.boltz/macaroons/admin.macaroon"
ENV BOLTZ_CLIENT_CERT="/root/.boltz/tls.cert"
ENV BOLTZ_CLIENT_WALLET="lnbits"
ENV DOCKER_LNBITS_BOLTZ=true

EXPOSE 5000

# Entrypoint to start boltzd and LNbits
COPY dockerboltz.sh /dockerboltz.sh
RUN chmod +x /dockerboltz.sh

CMD ["/dockerboltz.sh"]
